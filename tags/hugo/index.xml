<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on ぴしめも</title>
    <link>https://p4ko.com/tags/hugo/</link>
    <description>Recent content in hugo on ぴしめも</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Fri, 02 Jul 2021 22:23:12 +0900</lastBuildDate><atom:link href="https://p4ko.com/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugoで個別ページを作る</title>
      <link>https://p4ko.com/posts/addstaicpage/</link>
      <pubDate>Fri, 02 Jul 2021 22:23:12 +0900</pubDate>
      
      <guid>https://p4ko.com/posts/addstaicpage/</guid>
      <description>やりたいこと Hugoでブログを書いて，Aboutやポートフォリオなどの特別なページを作りたい．
通常投稿のテンプレートではなく，独自のスタイルのテンプレートを利用したい．
やり方 目標は
p4ko.com/posts/通常投稿/ p4ko.com/posts/通常投稿2/ p4ko.com/プロダクト/ 👈特別なページ ファイル構成は
/content/posts/通常投稿.md /content/posts/通常投稿2.md /content/プロダクト.md 👈追加ページ /layouts/custom/product.html 👈独自テンプレート プロダクト.mdのfrontmatterに次を追加します（YAMLの場合）
--- type: &amp;#34;custom&amp;#34; layout: &amp;#34;product&amp;#34; --- product.htmlにテンプレートを書きます． テーマの通常投稿のテンプレート（/themes/HOGE/layouts/_default/single.html）をコピーして弄るとよいと思います．
完全にベタ書きしたい場合はmarkdownの本文は空でもいいですし，もしくはテンプレート{{ .Content }}から本文を取ってきてもよいです．
あとがき 経緯 日本語の情報が無かったので書きました．
制作物まとめのページを以前から通常の投稿として置いていたのですが，もうちょっと見た目を良くしたかったので，追加テンプレートから生成するよう（というかほぼベタ書き）にしました．👇
⭐制作物まとめ⭐ // ぴしめも
参考 Creating &amp;lsquo;static&amp;rsquo; content that uses partials - support - HUGO
おわり</description>
    </item>
    
    <item>
      <title>新ドメインにしました</title>
      <link>https://p4ko.com/posts/domain/</link>
      <pubDate>Sun, 17 Jan 2021 19:08:19 +0900</pubDate>
      
      <guid>https://p4ko.com/posts/domain/</guid>
      <description>pishiko.github.ioからp4ko.comに変更しました！
p(ぴ)4（し）ko(こ).comということで，大変覚えやすいですね．
Github Pages + カスタムドメイン + HTTPS github pagesでホストしているサイトにカスタムドメインを割り当てる方法は以下に書いてありました．
Managing a custom domain for your GitHub Pages site - GitHub Docs
それから，Hugoの場合は生成時にCNAMEファイルが消されてしまうので，static/以下にCNAMEファイルを置いておく必要があります．
CNAMEファイルはgithubが自動で生成してくれるので，pullした後public/直下にあるCNAMEファイルを static/直下にコピーしておけばよいはずです．
追記 カスタムドメインでhttps化するにあたって，リポジトリのsettingsのEnforced Httpsのチェックを入れるだけでいいと思っていたんですが，AレコードをDNSに登録しても いつまでもチェックボックスを押せませんでした．
一度カスタムドメインを外して再設定したところ表示が変わったのですが，15分どころか１時間くらいこんな感じでした．
で，以下を参考に，wwwのCNAMEレコードをUSERNAME.github.ioに設定すると１日ほどでチェックできるようになっているといいな．（まだできてない）
Certificate request error is persistent (TLS Certificate can&amp;rsquo;t be provisioned) - GitHub Help / GitHub Pages - GitHub Support Community
追記の追記 8hほどでできたよ！
おわり</description>
    </item>
    
    <item>
      <title>Hugoのthemeを上書きできない問題</title>
      <link>https://p4ko.com/posts/css-custom/</link>
      <pubDate>Tue, 06 Oct 2020 16:50:38 +0900</pubDate>
      
      <guid>https://p4ko.com/posts/css-custom/</guid>
      <description>hugo serverで確認しながらテーマの上書きを試みてるんだけど，全然上書きされない．
あれーと思って キャッシュを強制再読み込みする --ignoreCache を付けてサーバーを起動してみたら次のエラーが出た．
&amp;gt;hugo server --ignoreCache Building sites … ERROR 2020/10/06 14:44:37 Transformation failed: TOCSS: failed to transform &amp;quot;css/main.scss&amp;quot; (text/x-scss): this feature is not available in your current Hugo version, see https://goo.gl/YMrWcn for more information Built in 501 ms Error: Error building site: logged 1 error(s) で，公式のヘルプを読む．
Frequently Asked Questions | Hugo
要約すると，Hugoは2バージョンあって，通常版とextended版がある．Sass(cssの拡張言語)に対応してるのはextended版だけだからそっちにしてね．です．ちなみに，extended版は少し重いらしい．あんまり気にならなかったけど．
ということでReleases · gohugoio/hugoからダウンロードして，Pathを通してあった場所を探して，Hugo.exeだけ入れ替える．
はい！うまくいきました！
にしても，オプション付けないとエラーが出てもキャッシュから生成しちゃうのどうなの？
CSSのカスタマイズ 例えば/themes/assets/css/components/main.scssを上書きしたいとしたら，ファイルを/assets/css/main.scssにコピーして書き換えればよい．Hugoが自動で置き換えてくれるので，元のテーマを汚染する心配がなくなる．このサイトのthemeはm10cというのを使っていて，themes/assets/css/_extra.scssを上書きしろと書いてあるので，/assets/css/_extra.scssに上書きしたい要素を追加していく．
例えばこんな感じで書けば，h2だけ上書きして下線を描画できる
h2 { border-bottom: solid 1px $light-color; margin-top : 80px; margin-bottom : 30px; } フォントもカスタマイズ Hugoのthemeって日本のことはほとんど考えられていないので，フォントが微妙．なので，Noto Sans JPを導入する．</description>
    </item>
    
    <item>
      <title>このブログをHugoで作った</title>
      <link>https://p4ko.com/posts/hugo1/</link>
      <pubDate>Sun, 02 Feb 2020 09:29:15 +0900</pubDate>
      
      <guid>https://p4ko.com/posts/hugo1/</guid>
      <description>Hugo＋GitHub Pages このブログはHugo + github pagesで公開しています．テンプレートのカスタムをしてると意外と情報が無かったです．ということで，Hugoのインストールからブログの更新まで簡単にメモしたいと思います．
そもそもなにそれ Hugoは静的ブログジェネレータというやつです．テンプレートとmarkdownの記事を用意すればhugoでindex.htmlなんかを生成してくれます．Go製です．早いです．
github pagesはリポジトリに置いておいた静的ファイルをホストしてくれるサービスです．
Hugoのインストール Windows10の場合です． https://github.com/gohugoio/hugo/releasesから最新リリースをダウンロードしてパスを通します．Hugo\binなんかにHugo.exeを移してPATHを通します．
そういえばこのときPATHの上限2000文字くらいを超えててGUIだとうまくいかないというのに出会った．とりあえずユーザ環境変数にしておいた．
Hugoのテーマ適用 hugo new site myblog  これでわーっと一式生成してくれます．
その後，https://themes.gohugo.io/で適当なテーマをダウンロードし，\themes\直下に適当な名前（テーマ名とか）にリネームしてディレクトリごとコピーします．
\config.tomlに設定を色々書いていきます．と言っても基本はコピペです．絶対に変えるのは
baseURL = &amp;quot;例 https://pishiko.github.io&amp;quot; theme = &amp;quot;さっきリネームしたテンプレート名&amp;quot;  で，あとは（テンプレートによると思いますが，）\themes\適当なテンプレート名\exampleSite\config.tomlにテンプレート固有の設定があったのでコピペして適宜変更しました．
Hugoでブログ生成 hugo new content\posts\test.md  するとひな形が生成されます． ひな形はこんな感じにすればOK
--- title: &amp;quot;Hello, world!&amp;quot; date: 2020-02-01T23:08:52+09:00 draft: false tags: [&amp;quot;memo&amp;quot;] --- 注意すべきはdraftで，trueだと非公開状態（＝debugモード）のみ公開なのでfalseにしないとデプロイしても反映されなくて泣く．
あとは適当にMarkdownで記事を書く．
ここまで上手くいっていれば，
hugo server -D  でdebugモードでサーバを起動できるので，localhost:1313でブログを確認できます．手直ししても更新検知して再起動してくれるので便利です．
公開まで hugo  これで\publicにindex.html ファイル一式が生成されます．これを公開しましょう．
まずはgithubで新規リポジトリを作成．その時のリポジトリ名はGITHUBのUSERNAME.github.ioにします．あとは
cd public git init git remote add origin git@github.</description>
    </item>
    
  </channel>
</rss>
